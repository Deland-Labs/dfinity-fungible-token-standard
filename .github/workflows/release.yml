name: publish

on:
  push:
    branches:
      - publish
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker.io/kentsday/dfx_rust:bullseye
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "src/package-lock.json"
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: "wasm32-unknown-unknown"
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: "src"
      - name: Setup .NET 5.0 for gittools
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "5.0.x"
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: 5.x
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11
        with:
          useConfigFile: true

      - name: install canister
        run: |
          cd $GITHUB_WORKSPACE/src
          dfx start --host 0.0.0.0:8000 --background
      - name: create package
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod a+x ./sh_setup_dev.sh
          ./sh_setup_dev.sh

          chmod a+x ./sh_package.sh
          ./sh_package.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            src/package/local.zip
      - name: Create Release
        uses: tix-factory/release-manager@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          mode: uploadReleaseAsset
          filePath: ./src/package/local.zip
          assetName: local-${{ steps.gitversion.outputs.MajorMinorPatch }}.zip
          tag: v${{ steps.gitversion.outputs.MajorMinorPatch }}
